name: 'pycoverage'
author: JoÃ£o Santos
description: >-
  Check pytest coverage and fail if tests failed or file and/or total coverage below threshold.
branding:
  color: 'purple'
  icon: 'check-square'
inputs:
  requirements-file:
    description: 'Path to the requirements file if you use pip. ./requirements.txt by default'
    required: false
    default: './requirements.txt'
  pytest-root-dir:
    description: 'root directory to recursively search for .py files'
    required: false
    default: '.'
  pytest-tests-dir:
    description: 'directory with pytest tests. if left empty will identify test(s) dir by default'
    required: false
    default: './'
  cov-omit-list:
    description: 'list of directories and/or files to ignore'
    required: false
    default: ''
  cov-threshold-single:
    description: 'fail if any single file coverage is less than threshold'
    required: false
    default: 0
  cov-threshold-total:
    description: 'fail if the total coverage is less than threshold'
    required: false
    default: 0
  async-tests:
    description: 'Add support for async tests'
    required: false
    default: false
  poetry-version:
    description: 'Version of poetry. Latest if not specified.'
    required: false
    default: ''
  poetry-groups:
    description: 'Poetry group names with the dependencies for the tests.'
    required: false
    default: 'dev,tests'
  package-extras:
    description: 'Package extras with the dependencies for the tests, or dev-requirement file if pip'
    required: false
    default: 'dev,tests'
  output:
    description: 'Output path to write the coverage badge.'
    required: false
    default: 'badges/coverage.svg'
  overwrite:
    description: 'Overwrite an existing coverage badge.'
    required: false
    default: 'true'

outputs:
  output-table: # id of output
    description: 'pytest-cov markdown output table'
  cov-threshold-single-fail:
    description: 'boolean if any single file coverage less than cov-threshold-single'
  cov-threshold-total-fail:
    description: 'boolean if total coverage less than cov-threshold-total'
runs:
  using: "composite"
  steps:
    - id: copy-coverage-processor
      run: cp ${{ github.action_path }}/coverage_handler.py ./coverage_handler
      shell: bash
    - id: run-tests
      run: |
        ${{ github.action_path }}/entrypoint.sh \
        "${{ inputs.requirements-file }}" \
        "${{ inputs.pytest-root-dir }}" \
        "${{ inputs.pytest-tests-dir }}" \
        "${{ inputs.cov-omit-list }}" \
        ${{ inputs.cov-threshold-single }} \
        ${{ inputs.cov-threshold-total }} \
        ${{ inputs.async-tests }} \
        ${{ inputs.poetry-version }} \
        ${{ inputs.poetry-groups }} \
        ${{ inputs.package-extras }} \
      shell: bash
    - run: |
        echo "SHORT_SHA=`echo ${{github.event.after}} | cut -c1-7`" >> $GITHUB_ENV
        echo "PULL_NUMBER=`echo ${{ github.event.pull_request.number }}`" >> $GITHUB_ENV
        echo "COMMIT_URL=`echo https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}/commits/${{ github.event.after }}`" >> $GITHUB_ENV
      shell: bash
    - run: |
        pip install -U coverage-badge
        EXTRA_ARGS=""
        if [[ '${{ inputs.overwrite }}' == 'true'  ]]; then
          EXTRA_ARGS+="-f"
        fi
        mkdir -p badges
        coverage-badge $EXTRA_ARGS -o "${{ inputs.output }}"
      shell: bash
    - uses: peter-evans/find-comment@v2.4.0
      if: ${{ env.PULL_NUMBER }}
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        direction: last
    - uses: peter-evans/create-or-update-comment@v3.0.1
      if: ${{ env.PULL_NUMBER }}
      with:
        issue-number: ${{env.PULL_NUMBER}}
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |
          ## Tests coverage table for [${{ env.SHORT_SHA }}](${{ env.COMMIT_URL }}) commit.
          ${{ steps.run-tests.outputs.output-table }}
        edit-mode: replace
    - name: Commit pytest coverage table
      if: ${{ !env.PULL_NUMBER }}
      uses: peter-evans/commit-comment@v2.0.1
      with:
        body: ${{ steps.run-tests.outputs.output-table }}
    - name: Commit files
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add "${{ inputs.output }}"
        git commit -m "Updated coverage.svg"
    - name: Push changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.github_token }}
        branch: ${{ github.ref }}        
    - id: check-threashold
      run: |
        if [ "${{ steps.run-tests.outputs.cov-threshold-single-fail }}" == "true" ]; then
          echo "cov single fail ${{ steps.run-tests.outputs.cov-threshold-single-fail }}";
          exit 1;
        elif [ "${{ steps.run-tests.outputs.cov-threshold-total-fail }}"  == "true" ]; then
          echo "cov single fail ${{ steps.run-tests.outputs.cov-threshold-total-fail }}";
          exit 1;
        fi
      shell: bash